{"name":"Hoodiecrow IMAP server","tagline":"Scriptable IMAP server for client integration testing","body":"# Hoodiecrow\r\n\r\n![It's a dove - I know - but I didn't have a proper hoodiecrow picture in my computer](https://raw.github.com/andris9/hoodiecrow/master/hoodiecrow.jpg)\r\n\r\n*It's a dove - I know - but I didn't have a proper hoodiecrow picture. Fake crow like a fake IMAP server*\r\n\r\nHoodiecrow is a scriptable IMAP server for client integration testing. It offers partial IMAP4ver1 support and some optional plugins that can be turned on and off.\r\n\r\n[![Build Status](https://secure.travis-ci.org/andris9/hoodiecrow.png)](http://travis-ci.org/andris9/hoodiecrow)\r\n[![NPM version](https://badge.fury.io/js/hoodiecrow.png)](http://badge.fury.io/js/hoodiecrow)\r\n\r\n# Usage\r\n\r\n### Run as a standalone server\r\n\r\nTo run Hoodiecrow you need [Node.js](http://nodejs.org/) in your machine. Node should work on almost any platform, so Hoodiecrow should too.\r\n\r\nIf you have Node.js installed, install Hoodiecrow with the `npm` command and run it:\r\n\r\n```bash\r\nnpm install -g hoodiecrow\r\nsudo hoodiecrow\r\n```\r\n\r\nSudo is needed to bind to port 143. If you choose to use a higher port, say 1143, you do not need to use sudo.\r\n\r\n> Protip: Running `hoodiecrow --help` displays useful information about command line options for Hoodiecrow and some sample configuration data.\r\n\r\nAfter you have started Hoodiecrow server, you can point your IMAP client to `localhost:143`. Use `\"testuser\"` as user name and `\"testpass\"` as password to log in to the server.\r\n\r\n### Include as a Node.js module\r\n\r\nAdd `hoodiecrow` dependency\r\n\r\n```bash\r\nnpm install hoodiecrow\r\n```\r\n\r\nCreate and start an IMAP server\r\n\r\n```javascript\r\nvar hoodiecrow = require(\"hoodiecrow\"),\r\n    server = hoodiecrow(options);\r\nserver.listen(143);\r\n```\r\n\r\nSee [example.js](https://github.com/andris9/hoodiecrow/blob/master/example.js) for an example configuration.\r\n\r\n## Scope\r\n\r\nHoodiecrow is a single user / multiple connections IMAP server that uses a JSON object as its directory and messages structure. Nothing is read from or written to disk and the entire directory structure is instantiated every time the server is started, eg. changes made through the IMAP protocol (adding/removing messages/flags etc) are not saved permanently. This should ensure that you can write integration tests for clients in a way where a new fresh server with unmodified data is started for every test.\r\n\r\nSeveral clients can connect to the server simultanously but all the clients share the same user account, even if login credentials are different.\r\n\r\nHoodiecrow is extendable, any command can be overwritten, plugins can be added etc (see command folder for built in command examples and plugin folder for plugin examples).\r\n\r\n## Authentication\r\n\r\nAn user can always login with username `\"testuser\"` and password `\"testpass\"`. Any other credentials can be added as needed.\r\n\r\n## Status\r\n\r\n### IMAP4rev1\r\n\r\n  * **FETCH** and **UID FETCH** support is partial (does not retrieve nested parts, eg. 1.1.TEXT)\r\n  * Other commands should be more or less ready\r\n\r\n### Supported Plugins\r\n\r\nPlugins can be enabled when starting the server but can not be unloaded or loaded when the server is already running\r\n\r\n  * **AUTH-PLAIN** Adds AUTH=PLAIN capability. Supports SALS-IR [RFC4959] as well\r\n  * **CONDSTORE** Partially implemented CONDSTORE [RFC4551] support\r\n  * **CREATE-SPECIAL-USE** Enables CREATE-SPECIAL-USE [RFC6154] capability. Allowed special flags can be set with server option `\"special-use\"`\r\n  * **ENABLE** Adds ENABLE capability [RFC5161]. Must be loaded before any plugin that requires ENABLE support (eg. CONDSTORE)\r\n  * **ID** Adds ID [RFC2971] capability\r\n  * **IDLE** Adds IDLE [RFC2177] capability\r\n  * **LITERALPLUS** Enables LITERAL+ [RFC2088] capability\r\n  * **LOGINDISABLED** Disables LOGIN support for unencrypted connections\r\n  * **NAMESPACE** Adds NAMESPACE [RFC2342] capability\r\n  * **SASL-IR** Enables SASL-IR [RFC4959] capability\r\n  * **SPECIAL-USE** Enables SPECIAL-USE [RFC6154] capability Mailboxes need to have a \"special-use\" property (String or Array) that will be used as extra flag for LIST and LSUB responses\r\n  * **STARTTLS** Adds STARTTLS command\r\n  * **UNSELECT** Adds UNSELECT [RFC3691] capability\r\n  * **XTOYBIRD** Custom plugin to allow programmatic control of the server. Login not required to use XTOYBIRD commands\r\n\r\nPlanned but not yet implemented\r\n\r\n  * **MOVE**\r\n  * **UIDPLUS**\r\n  * **QUOTA**\r\n  * **X-GM-EXT-1** except for **SEARCH X-GM-RAW**\r\n  * **AUTH=XOAUTH2** (maybe **AUTH=XOAUTH2** also)\r\n\r\n## Authentication\r\n\r\nAn user can always login with username `\"testuser\"` and password `\"testpass\"`. Any other credentials can be added as needed.\r\n\r\n## Existing XTOYBIRD commands\r\n\r\nTo use these functions, XTOYBIRD plugin needs to be enabled\r\n\r\n  * **XTOYBIRD SERVER** dumps server object as a LITERAL string. Useful for debugging current state.\r\n  * **XTOYBIRD CONNECTION** dumps session object as a LITERAL string. Useful for debugging current state (includes socket info etc).\r\n  * **XTOYBIRD STORAGE** outputs storage as a LITERAL strint (JSON). Useful for storing the storage for later usage.\r\n\r\nExample\r\n\r\n```\r\nS: * Hoodiecrow ready for rumble\r\nC: A1 XTOYBIRD STORAGE\r\nS: * OK [JSON] {3224}\r\nS: {\r\nS:   \"\": {\r\nS:       \"folders\": {\r\nS:           \"INBOX\": {\r\nS:               \"messages\": [\r\nS:                   {\r\nS:                       \"raw\": \"Subject: hello 1\\r\\n\\r\\nWorld 1!\",\r\nS:                       ...\r\nS: A1 OK XTOYBIRD Completed\r\n```\r\n\r\n## Useful features for Hoodiecrow I'd like to see\r\n\r\n  * An ability to change UIDVALIDITY at runtime (eg. `A1 XTOYBIRD UIDVALIDITY INBOX 123` where 123 is the new UIDVALIDITY for INBOX)\r\n  * An ability to change available disk space (eg. `A1 XTOYBIRD DISKSPACE 100 50` where 100 is total disk space in bytes and 50 is available space)\r\n  * An ability to restart the server to return initial state (`A1 XTOYBIRD RESET`)\r\n  * An ability to change storage runtime by sending a JSON string describing the entire storage (`A1 XTOYBIRD UPDATE {123}\\r\\n{\"\":{\"INBOX\":{...}}})`)\r\n  * Maybe even enabling/disabling plugins but this would require restarting the server\r\n\r\n```\r\nC: A1 XTOYBIRD ENABLE ID UIDPLUS\r\nS: * XTOYBIRD ENABLED ID\r\nS: * XTOYBIRD ENABLED UIDPLUS\r\nS: A1 XTOYBIRD completed. Restart required\r\nC: A2 RESTART\r\n* BYE Server is Restarting\r\n```\r\n\r\n## CONDSTORE support\r\n\r\n  * All messages have MODSEQ value\r\n  * CONDSTORE can be ENABLEd\r\n  * SELECT/EXAMINE show HIGHESTMODSEQ\r\n  * SELECT/EXAMINE support (CONDSTORE) option\r\n  * Updating flags increments MODSEQ value\r\n\r\n# Known issues\r\n\r\nThese issues will be fixed\r\n\r\n  * **CONDSTORE** support is partial\r\n\r\nThese issues are probably not going to get fixed\r\n\r\n  * **Session flags** are not supported (this means that `\\Recent` flag is also not supported)\r\n  * **addr-adl** (at-domain-list) values are not supported, NIL is always used\r\n  * **anonymous namespaces** are not supported\r\n  * **STORE** returns NO and nothing is updated if there are pending EXPUNGE messages\r\n  * **CHARSET** argument is ignored\r\n\r\n# Running tests\r\n\r\nRunning tests requires you to have grunt-cli installed\r\n\r\n    npm install -g grunt-cli\r\n\r\nAfter which you can run\r\n\r\n    grunt\r\n\r\nor\r\n\r\n    npm test\r\n\r\nTo run all the tests.\r\n\r\n# License\r\n\r\n**MIT**\r\n","google":"UA-51322-45","note":"Don't delete this file! It's used internally to help with page regeneration."}